[{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://cimentadaj.github.io/socialclasses/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://cimentadaj.github.io/socialclasses/articles/exploring-translations-between-social-classes-ess.html","id":"exploring-translations-between-social-classes","dir":"Articles","previous_headings":"","what":"Exploring translations between social classes","title":"Exploring translations between social classes using the ESS data","text":"Let’s suppose ’ve received dataset contains International Standard Classification Occupations (ISCO) occupations respondents survey. particular, ’ve got ISCO classification year 1968, bit outdated. package DIGCLASS can translate classiciation many others. Let’s load package use data ess contains ISCO68 European Social Survey. can see, dataset contains isco68, isco88 isco08. Assume second isco88 isco08 ’d like translate isco68 class schemas. DIGCLASS find functions translate isco68 begin isco68_. typed text editor isco68_ hit TAB, presumably ’ll get auto-completion possible translations. ’s selected number translations can get isco68: can see, got translations done rather quickly. DIGCLASS aims consistent interface, meaning happen ISCO88 instead ISCO68, convention functions used: Similarly, can apply transformations ISCO08 following skeleton. one let’s see labs = TRUE check labels: Notice classes translate labels (isco88 oesch) others like isei siops actual numeric translations. ’s don’t label argument; continuous scales. Note swapping first part function (isco88_ isco68_) another ISCO always work isco** translations. sure check reference functions see translations available ISCO class schema.","code":"library(DIGCLASS) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  ess #> # A tibble: 56,752 × 12 #>    isco68 isco88 isco88com isco08 emplno self_employed is_supervisor #>    <chr>  <chr>  <chr>     <chr>   <dbl>         <dbl>         <dbl> #>  1 0140   3111   3111      3111        0             0             1 #>  2 3210   3431   3431      4120        0             0             0 #>  3 2119   1210   1210      1120        0             0             1 #>  4 1320   2320   2320      2330        0             0             0 #>  5 8550   7137   7137      7411        0             0             1 #>  6 5401   5131   5131      5311        0             0             0 #>  7 NA     NA     NA        NA          0             0             0 #>  8 1593   2419   2419      2432        0             0             1 #>  9 1930   3460   3460      2635        0             0             0 #> 10 1950   2444   2444      2643        0             0             0 #> # ℹ 56,742 more rows #> # ℹ 5 more variables: control_work <dbl>, control_daily <dbl>, #> #   work_status <dbl>, main_activity <dbl>, agea <dbl> # Set `labels` to `FALSE` to obtain # the translated number instead of the label labs <- FALSE  # For some class schemas we use the number of employees that # the respondent has in their job. Here we're just recoding # some values that are missing. ess <- ess %>% mutate(emplno = if_else(emplno > 10000, 0, emplno))   # Translate `isco68` to many class schemas ess %>%   select(isco68, self_employed, emplno) %>%   transmute(     isco68,     isco88 = isco68_to_isco88(isco68, label = labs),     isco08 = isco68_to_isco08(isco68, label = labs),     siops = isco68_to_siops(isco68),     isei = isco68_to_isei(isco68),     egp = isco68_to_egp(isco68, self_employed, emplno, label = labs),   ) #> # A tibble: 56,752 × 6 #>    isco68 isco88 isco08 siops isei  egp   #>    <chr>  <chr>  <chr>  <chr> <chr> <chr> #>  1 0140   3111   3111   46    47    2     #>  2 3210   4111   4120   48    55    3     #>  3 2119   1210   1120   75    69    1     #>  4 1320   2321   2330   60    71    2     #>  5 8550   7137   7411   44    40    8     #>  6 5401   5131   5311   23    24    9     #>  7 NA     NA     NA     NA    NA    NA    #>  8 1593   2419   2432   57    66    2     #>  9 1930   2446   2635   52    54    2     #> 10 1950   2444   2643   62    54    2     #> # ℹ 56,742 more rows ess %>%   select(isco88, self_employed, emplno) %>%   transmute(     isco88,     isco68 = isco88_to_isco68(isco88, label = labs),     isco88com = isco88_to_isco88com(isco88, label = labs),     isco08 = isco88_to_isco08(isco88, label = labs),     siops = isco88_to_siops(isco88),     isei = isco88_to_isei(isco88),     mps = isco88_to_mps(isco88),     egp = isco88_to_egp(isco88, self_employed, emplno, label = labs),     oesch = isco88_to_oesch(isco88, self_employed, emplno, label = labs)   ) #> # A tibble: 56,752 × 9 #>    isco88 isco68 isco88com isco08 siops isei  mps   egp   oesch #>    <chr>  <chr>  <chr>     <chr>  <chr> <chr> <chr> <chr> <chr> #>  1 3111   0140   3111      3111   46    45    69.3  2     6     #>  2 3431   3210   3431      3343   53    54    73.2  2     10    #>  3 1210   2119   1210      1120   70    70    150.8 1     9     #>  4 2320   1320   2320      2330   60    69    149.2 2     13    #>  5 7137   8550   7137      7411   44    37    56    8     7     #>  6 5131   5401   5131      5311   23    25    56.9  4     15    #>  7 NA     NA     NA        NA     NA    NA    NA    NA    NA    #>  8 2419   1593   2419      2400   57    69    126.7 2     9     #>  9 3460   1930   3460      3412   49    43    88.2  3     14    #> 10 2444   1950   2444      2643   62    65    117.2 2     14    #> # ℹ 56,742 more rows labs <- TRUE  ess %>%   select(isco08, self_employed, emplno) %>%   transmute(     isco08,     isco88 = isco08_to_isco88(isco08, label = labs),     siops = isco08_to_siops(isco08),     isei = isco08_to_isei(isco08),     oesch = isco08_to_oesch(isco08, self_employed, emplno, label = labs)   ) #> # A tibble: 56,752 × 5 #>    isco08 isco88                                            siops isei  oesch    #>    <chr>  <chr>                                             <chr> <chr> <chr>    #>  1 3111   'Chemical and physical science technicians'       46.00 49    'Techni… #>  2 4120   'Secretaries'                                     50.87 42    'Skille… #>  3 1120   'Directors and chief executives'                  64.51 70    'Higher… #>  4 2330   'Secondary education teaching professionals'      62.63 71    'Socio-… #>  5 7411   'Building and related electricians'               44.01 43    'Skille… #>  6 5311   'Child-care workers'                              23.00 26    'Skille… #>  7 NA     NA                                                NA    NA    NA       #>  8 2432   'Business professionals not elsewhere classified' 57.00 64    'Higher… #>  9 2635   'Social work professionals'                       53.89 59    'Socio-… #> 10 2643   'Philologists, translators and interpreters'      65.66 68    'Socio-… #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/articles/repairing_isco_input.html","id":"short-summary","dir":"Articles","previous_headings":"","what":"Short Summary","title":"Repairing an ISCO variable","text":"reading data R, ISCO variables tend loose information read number. sure specify ISCO variables read character vectors instead numeric ones. can CSV files Stata formats like (remember change ISCO column names ones data ): Also, reading data, sure run repair_isco ISCO variable correct problems. example:","code":"library(readr) library(haven)  # For CSV, specify `col_types` isco_ready <- read_csv(isco_csv, col_types = list(ISCO08 = col_character(), ISCO88 = col_character()))  # For Stata read_dta(\"ess.dta\", col_types = c(ISCO08 = \"character\")) x <- repair_isco(isco_ready$ISCO08) #> ! ISCO variable is not a character. Beware that numeric ISCO variables possibly contain lost data. See https://cimentadaj.github.io/socialclasses/articles/repairing_isco_input.html for more details. Converting to a character vector. #> ℹ ISCO variable has occupations with digits less than 4. Converting to 4 digits. #> • Converted `110` to `0110` #> • Converted `210` to `0210` #> • Converted `310` to `0310` #> • Converted `100` to `0100` #> • Converted `200` to `0200` #> • Converted `300` to `0300`"},{"path":"https://cimentadaj.github.io/socialclasses/articles/repairing_isco_input.html","id":"repairing-isco-variables","dir":"Articles","previous_headings":"","what":"Repairing ISCO variables","title":"Repairing an ISCO variable","text":"ISCO variables can become corrupted read R. Let show typical example. Suppose CSV file data ISCO occupations: CSV data string R need read read_csv. quite common ISCO columns read numeric column using functions read_csv read_dta (Stata files). Let’s see happens read column numeric: first 6 rows lost first 0. quite dangerous right now don’t know occupation 110 actually 0110 1100. Since can’t check every single occupation dataset confirm kept information digit, DIGCLASS function repair_isco tells corrects issues. Let’s run : functions tells us things: column numeric, warns need turn character Warns occupations digit less 4. input ISCO variable 3, 2 1 digit, can change using digits argument set another number. Shows transformation made harmonize occupations. transformations appending 0’s left total number digits. Ideally, want make sure always read data characters way can preserve original coding data. can read data characters like CSV: Note messages printed now. ’s function correct nothing needs done. Similarly Stata files, always specify ISCO variable read character like : read data, sure run repair_isco notify problems.","code":"library(DIGCLASS) library(readr)  isco_csv <- \"ISCO08,ISCO88 0110,0110 0210,0110 0310,0110 0100,0110 0200,0110 0300,0110 1000,1000 1100,1100 1110,1100 1111,1110\" isco_ready <- read_csv(isco_csv, col_types = list(.default = col_double())) isco_ready$ISCO08 <- repair_isco(isco_ready$ISCO08) #> ! ISCO variable is not a character. Beware that numeric ISCO variables possibly contain lost data. See https://cimentadaj.github.io/socialclasses/articles/repairing_isco_input.html for more details. Converting to a character vector. #> ℹ ISCO variable has occupations with digits less than 4. Converting to 4 digits. #> • Converted `110` to `0110` #> • Converted `210` to `0210` #> • Converted `310` to `0310` #> • Converted `100` to `0100` #> • Converted `200` to `0200` #> • Converted `300` to `0300` isco_ready <- read_csv(isco_csv, col_types = list(ISCO08 = col_character(), ISCO88 = col_character())) isco_ready$ISCO08 <- repair_isco(isco_ready$ISCO08) read_dta(\"ess.dta\", col_types = c(ISCO08 = \"character\"))"},{"path":"https://cimentadaj.github.io/socialclasses/articles/translating_between_hierarchies.html","id":"translating-between-hierarchies","dir":"Articles","previous_headings":"","what":"Translating between hierarchies","title":"Translating between hierarchies for ISCO68, ISCO88 and ISCO08","text":"surveys contain occupation related variables 4 digit ISCO occupations. mean? ’re working fine-grained definition occupation. cases, want work aggregated groups. Instead knowing something mathematician, ’d rather group math related occupation “Scientist” category. DIGCLASS implemented following rules ISCO schema. Let’s load DIGCLASS: ISCO parlance, granular occupation ’s called 4 digits. means occupation 4 non-zero digits. Occupation 2111 4 digit occupation contain zeroes. contrast, 2110 “parent” category 2111. make even simple, think 2111 occupation “Physicists astronomers” 2110 “Physicists, chemists related professionals”. can intuitively group physicists broader category. Similarly, occupation 2110 “Physicists, chemists related professionals” nested within broader group 2100 “Physical, mathematical engineering science professionals”. Finally, broadest group 2000, general group definition “Professionals. just intuitive explanation ISCO codes works. don’t remember category . can always look values better understanding DIGCLASS work translating everything . important thing remember something ’ll want group fine grained occupations broader occupation categories. example categories within “Physicists, chemists related professionals” grouped together. means “convert” column 4 digits 2 digits, example. DIGCLASS can function isco*_swap * ISCO preference. Let’s look ISCO variables ESS data DIGCLASS: three ISCO variables four digits can convert three digits: can see, three digit translation always zero, meaning translated broder group. can even broader group, translating 4 2 digits: can see two digit translation broader category original four digit occupation. Note can translate everything 4 1 way around: ’s can’t translate broader group finer occupation many specific occupation within broder group. Finally, note ISCO68, 1 digit groups missing (0000 1000 don’t broader category), translate digit 1 digit ISCO68 might missing values occupation within major group 0000 1000: Note 1 digit groups 2000, 3000, 5000 8000 translated correctly. Yet 1 digit group 1000 0000 never translated don’t exist ISCO68. DIGCLASS makes translation either way note ’ll lose information translate schemas ’s NA.","code":"library(DIGCLASS) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union ess #> # A tibble: 56,752 × 12 #>    isco68 isco88 isco88com isco08 emplno self_employed is_supervisor #>    <chr>  <chr>  <chr>     <chr>   <dbl>         <dbl>         <dbl> #>  1 0140   3111   3111      3111        0             0             1 #>  2 3210   3431   3431      4120        0             0             0 #>  3 2119   1210   1210      1120        0             0             1 #>  4 1320   2320   2320      2330        0             0             0 #>  5 8550   7137   7137      7411        0             0             1 #>  6 5401   5131   5131      5311        0             0             0 #>  7 NA     NA     NA        NA          0             0             0 #>  8 1593   2419   2419      2432        0             0             1 #>  9 1930   3460   3460      2635        0             0             0 #> 10 1950   2444   2444      2643        0             0             0 #> # ℹ 56,742 more rows #> # ℹ 5 more variables: control_work <dbl>, control_daily <dbl>, #> #   work_status <dbl>, main_activity <dbl>, agea <dbl> ess %>%   transmute(     isco88,     isco88_three = isco88_swap(isco88, from = 4, to = 3)   ) #> # A tibble: 56,752 × 2 #>    isco88 isco88_three #>    <chr>  <chr>        #>  1 3111   3110         #>  2 3431   3430         #>  3 1210   1210         #>  4 2320   2320         #>  5 7137   7130         #>  6 5131   5130         #>  7 NA     NA           #>  8 2419   2410         #>  9 3460   3460         #> 10 2444   2440         #> # ℹ 56,742 more rows ess %>%   transmute(     isco08,     isco08_two = isco08_swap(isco08, from = 4, to = 2)   ) #> # A tibble: 56,752 × 2 #>    isco08 isco08_two #>    <chr>  <chr>      #>  1 3111   3100       #>  2 4120   4100       #>  3 1120   1100       #>  4 2330   2300       #>  5 7411   7400       #>  6 5311   5300       #>  7 NA     NA         #>  8 2432   2400       #>  9 2635   2600       #> 10 2643   2600       #> # ℹ 56,742 more rows ess %>%   transmute(     isco08,     isco08_two = isco08_swap(isco08, from = 2, to = 4)   ) #> Error in `transmute()`: #> ℹ In argument: `isco08_two = isco08_swap(isco08, from = 2, to = 4)`. #> Caused by error in `isco08_swap()`: #> ! `from` should always be a bigger digit group than `to`. ess %>%   transmute(     isco68,     isco68_one = isco68_swap(isco68, from = 4, to = 1)   ) #> # A tibble: 56,752 × 2 #>    isco68 isco68_one #>    <chr>  <chr>      #>  1 0140   NA         #>  2 3210   3000       #>  3 2119   2000       #>  4 1320   1000       #>  5 8550   8000       #>  6 5401   5000       #>  7 NA     NA         #>  8 1593   1000       #>  9 1930   1000       #> 10 1950   1000       #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/articles/translating_between_hierarchies.html","id":"using-translated-hierarchies-for-translation-between-schemas","dir":"Articles","previous_headings":"","what":"Using translated hierarchies for translation between schemas","title":"Translating between hierarchies for ISCO68, ISCO88 and ISCO08","text":"isco*_swap important functions translations require ISCO variables different digits. example, translate ISCO08 ESEC class schema, ISCO08 needs 3-digits. translation look like? ’s example: Similarly, ESEC another translation based ISCO08 2-digits. ’s example: can see, isco*_swap functions serve facilitate common task ISCO translations.","code":"library(dplyr)  # convert isco08 to three digits ess$isco08_three <- isco08_swap(ess$isco08, from = 4, to = 3)  ess %>%   transmute(     isco08_three,     esec = isco08_to_esec(       isco08_three,       is_supervisor,       self_employed,       emplno,       label = FALSE     )   ) #> # A tibble: 56,752 × 2 #>    isco08_three esec  #>    <chr>        <chr> #>  1 3110         2     #>  2 4120         3     #>  3 1120         1     #>  4 2330         2     #>  5 7410         6     #>  6 5310         7     #>  7 NA           NA    #>  8 2430         1     #>  9 2630         1     #> 10 2640         2     #> # ℹ 56,742 more rows # convert to two digits ess$isco08_two <- isco08_swap(ess$isco08, from = 4, to = 2)  ess %>%   transmute(     isco08_two,     esec = isco08_two_to_esec(       isco08_two,       is_supervisor,       self_employed,       emplno,       label = FALSE     )   ) #> # A tibble: 56,752 × 2 #>    isco08_two esec  #>    <chr>      <chr> #>  1 3100       2     #>  2 4100       2     #>  3 1100       1     #>  4 2300       2     #>  5 7400       4     #>  6 5300       6     #>  7 NA         NA    #>  8 2400       1     #>  9 2600       1     #> 10 2600       1     #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jorge Cimentada. Author, maintainer.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cimentada J (2023). DIGCLASS: package translate occupational classes R. Currently translate ISCO68/88/08 dozens occupational classes. R package version 0.0.1, https://cimentadaj.github.io/socialclasses/.","code":"@Manual{,   title = {DIGCLASS: A package to translate between occupational classes in R. Currently translate ISCO68/88/08 to dozens of occupational classes},   author = {Jorge Cimentada},   year = {2023},   note = {R package version 0.0.1},   url = {https://cimentadaj.github.io/socialclasses/}, }"},{"path":"https://cimentadaj.github.io/socialclasses/index.html","id":"digclass","dir":"","previous_headings":"","what":"A package to translate between occupational classes in R. Currently translate ISCO68/88/08 to dozens of occupational classes","title":"A package to translate between occupational classes in R. Currently translate ISCO68/88/08 to dozens of occupational classes","text":"DIGCLASS R package aims make translation occupational social classes easy comprehensive. facilitates translation International Standard Classification Occupations (ISCO) 1968, 1988 2008 wide range social class schemes. package work progress implemented currently translations: ISCO68 ISCO88 ISCO68 ISCO08 ISCO68 SIOPS ISCO68 ISEI ISCO68 EGP11/EGP7/EGP5/EGP3 ISCO68 EGP11-MP ISCO88 ISEI ISCO88 SIOPS ISCO88 MPS88 ISCO88 EGP11/EGP7/EGP5 ISCO88 EGP11-MP ISCO88 OESCH16/OESCH8/OESCH5 ISCO88 ISCO88COM ISCO88 ISCO08 ISCO88 ISCO68 ISCO88COM ESEC - ISCO88COM must 3 digits ISCO88COM ESEC-MP - ISCO88COM must 3 digits ISCO88COM MSEC - ISCO88COM must 3 digits ISCO88COM WRIGHT ISCO08 ISCO88 ISCO08 ISEI ISCO08 SIOPS ISCO08 OESCH16/OESCH8/OESCH5 ISCO08 ESEC - ISCO08 must 3 digits ISCO08 ESEC - ISCO08 must 2 digits ISCO08 ESEC-MP - ISCO08 must 3 digits ISCO08 MSEC - ISCO08 must 3 digits ISCO08 Microclasses ISCO08 ESEG - ISCO08 must 2 digits Translation major/submajor/minor/unit groups ISCO68, ISCO88 ISCO08 Repair ISCO variables","code":""},{"path":"https://cimentadaj.github.io/socialclasses/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A package to translate between occupational classes in R. Currently translate ISCO68/88/08 to dozens of occupational classes","text":"can install development version DIGCLASS GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"cimentadaj/socialclasses\")"},{"path":"https://cimentadaj.github.io/socialclasses/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A package to translate between occupational classes in R. Currently translate ISCO68/88/08 to dozens of occupational classes","text":"’s example translating ISCO68 ISEI EGP class schemas: nomenclature function {origin}_to_{destination} origin origin class schema destination destination class schema. usual workflow type, example isco hit TAB get auto-completion possible translations. class schemas labels, label argument returns labels instead class codes.","code":"library(DIGCLASS) library(dplyr)  # Internal data for the European Social Survey round 5 # containing different ISCO variables ess %>%   mutate(     isei = isco68_to_isei(isco68),     egp = isco68_to_egp(isco68, self_employed, emplno),     egp_labels = isco68_to_egp(isco68, self_employed, emplno, label = TRUE)   ) #> # A tibble: 56,752 × 10 #>    isco68 isco88 isco88com isco08 emplno self_employed is_supervisor isei  egp   #>    <chr>  <chr>  <chr>     <chr>   <dbl>         <dbl>         <dbl> <chr> <chr> #>  1 0140   3111   3111      3111        0             0             1 47    2     #>  2 3210   3431   3431      4120        0             0             0 55    3     #>  3 2119   1210   1210      1120        0             0             1 69    1     #>  4 1320   2320   2320      2330        0             0             0 71    2     #>  5 8550   7137   7137      7411        0             0             1 40    8     #>  6 5401   5131   5131      5311        0             0             0 24    9     #>  7 <NA>   <NA>   <NA>      <NA>        0             0             0 <NA>  <NA>  #>  8 1593   2419   2419      2432        0             0             1 66    2     #>  9 1930   3460   3460      2635        0             0             0 54    2     #> 10 1950   2444   2444      2643        0             0             0 54    2     #> # ℹ 56,742 more rows #> # ℹ 1 more variable: egp_labels <chr>"},{"path":"https://cimentadaj.github.io/socialclasses/index.html","id":"steps-to-add-a-new-translation","dir":"","previous_headings":"","what":"Steps to add a new translation","title":"A package to translate between occupational classes in R. Currently translate ISCO68/88/08 to dozens of occupational classes","text":"Add two csv files respectively data-raw/social_classes/labels/ data-raw/social_classes/translation/ containing labels translation two schemas. Run script data-raw/social_classes.R (root directory data-raw/) Add new function inside R/ convention {origin}_to_{destination}() origin destination class schemas ’re translating. Please look translation recycle common functions translations. Add proper documentation function","code":""},{"path":"https://cimentadaj.github.io/socialclasses/index.html","id":"other-r-packages","dir":"","previous_headings":"","what":"Other R packages","title":"A package to translate between occupational classes in R. Currently translate ISCO68/88/08 to dozens of occupational classes","text":"package benefitted greatly open source packages already pave way translation social class schemas. particular, ’ve learned lot borrowed code packages: ISCOGEN: Stata package SocialPosition: R package occupar: R package","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/all_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"A list with all labels available for all occupational schemas — all_labels","title":"A list with all labels available for all occupational schemas — all_labels","text":"slot contains data frame schemas. name slot list shows current schema.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/all_labels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list with all labels available for all occupational schemas — all_labels","text":"list","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/all_schemas.html","id":null,"dir":"Reference","previous_headings":"","what":"A list with all available translations between occupational schemas. — all_schemas","title":"A list with all available translations between occupational schemas. — all_schemas","text":"slot contains data frame translation two schemas. Additionally, contains translation major/submajor/minor/unit ISCO schemas. name slot list shows schemas translated. Always, first column origin schema second column destination schema.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/all_schemas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list with all available translations between occupational schemas. — all_schemas","text":"list","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/ess.html","id":null,"dir":"Reference","previous_headings":"","what":"An example data frame with data from the European Social Survey, round 5. — ess","title":"An example data frame with data from the European Social Survey, round 5. — ess","text":"Just example data frame show package can used translate schemas.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/ess.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example data frame with data from the European Social Survey, round 5. — ess","text":"Data Frame","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/ess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An example data frame with data from the European Social Survey, round 5. — ess","text":"codebook columns : isco68: ISCO68 class schema 4-digits. isco88: ISCO88 class schema 4-digits. isco88com: ISCO88COM class schema 4-digits. isco08: ISCO08 class schema 4-digits. emplno: Number subordinates, . 0 employees, number 0 NA, data using DIGCLASS. self_employed: numeric vector indicating whether individual self-employed (1) employee (0). is_supervisor: numeric vector indicating whether individual supervisor (1, e.g. responsible employees) (0). control_work: likert-scale type question 0 10 0 whether individual control work/organisation decisions 10 complete control work/organization decisions. example, see variable iorgact European Social Survey. control_daily: likert-scale type question 1 4 1 means complete control decide daily work /organised 4 means control decide daily work /organised. example, see variable orgwrk European Social Survey. Another example recoding variable wkdcorga European Social Survey 8-10 1, 5-7 2, 2-4 3 0-1 4. work_status: self_employed non-employed respondents coded 2. unique values 1 = self_employed, 0 = employee 2 = non employed. variable constructed using variable emplrel mainact unemployed. main_activity: numeric vector 1 = respondent working, 2 = respondent education, 3 = respondent disabled , 4 = respondent paid work (household work, taking care children, etc..) 5 = respondent retired. variable can recoded using mainact variable European Social Survey.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_swap.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap ISCO08/ISCO88/ISCO88 between 1, 2, 3 and 4 digit groups — isco08_swap","title":"Swap ISCO08/ISCO88/ISCO88 between 1, 2, 3 and 4 digit groups — isco08_swap","text":"function translates vector ISCO08/ISCO88/ISCO88 codes different digits. surveys, translating 4 digit occupations general groups, three , two one digit groups.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_swap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap ISCO08/ISCO88/ISCO88 between 1, 2, 3 and 4 digit groups — isco08_swap","text":"","code":"isco08_swap(x, from, to)  isco88_swap(x, from, to)  isco68_swap(x, from, to)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_swap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap ISCO08/ISCO88/ISCO88 between 1, 2, 3 and 4 digit groups — isco08_swap","text":"x character vector 4-digit ISCO08/ISCO88/ISCO88 codes. 4 digit means even though function 3-digits (code 131 example), code 1310, 4-digit version ISCO. numeric specifying occupation digits input vector. Possible values 1, 2, 3 4. numeric specifying desired occupation digits. Possible values 1, 2, 3 4.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_swap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap ISCO08/ISCO88/ISCO88 between 1, 2, 3 and 4 digit groups — isco08_swap","text":"character vector ISCO08/ISCO88/ISCO88 codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_swap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Swap ISCO08/ISCO88/ISCO88 between 1, 2, 3 and 4 digit groups — isco08_swap","text":"Note translate using isco*_swap need provide arguments. first one specifies current number digits input variable. variable 4-digit occupations, 4. want translate 4-digit occupations 3-digits arguments = 4 = 3. See argument description possible values. well examples works. function accept 4 digit codes 4 digits. means 3-digit code 131 1310. codes 4 digits, even though code represented 3-digits (1310, 1320, etc..) Note translation can done higher smaller digits (4 3, 3 2, 3 1) never way around (1 2, 2 3, 3 4). ISCO68 might return NAs depending occupation code 4 digits groups 0000 1000. translation 4 digit codes 1 digit codes within groups return NA major groups. See ILO website: https://www.ilo.org/public/english/bureau/stat/isco/isco68/major.htm.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_swap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap ISCO08/ISCO88/ISCO88 between 1, 2, 3 and 4 digit groups — isco08_swap","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # isco08 ess %>%   transmute(     isco08,     isco08_one = isco08_swap(isco08, from = 4, to = 1),     isco08_two = isco08_swap(isco08, from = 4, to = 2),     isco08_three = isco08_swap(isco08, from = 4, to = 3),     isco08_four = isco08_swap(isco08, from = 4, to = 4)   ) #> # A tibble: 56,752 × 5 #>    isco08 isco08_one isco08_two isco08_three isco08_four #>    <chr>  <chr>      <chr>      <chr>        <chr>       #>  1 3111   3000       3100       3110         3111        #>  2 4120   4000       4100       4120         4120        #>  3 1120   1000       1100       1120         1120        #>  4 2330   2000       2300       2330         2330        #>  5 7411   7000       7400       7410         7411        #>  6 5311   5000       5300       5310         5311        #>  7 NA     NA         NA         NA           NA          #>  8 2432   2000       2400       2430         2432        #>  9 2635   2000       2600       2630         2635        #> 10 2643   2000       2600       2640         2643        #> # ℹ 56,742 more rows  # isco88 ess %>%   transmute(     isco88,     isco88_one = isco88_swap(isco88, from = 4, to = 1),     isco88_two = isco88_swap(isco88, from = 4, to = 2),     isco88_three = isco88_swap(isco88, from = 4, to = 3),     isco88_four = isco88_swap(isco88, from = 4, to = 4)   ) #> # A tibble: 56,752 × 5 #>    isco88 isco88_one isco88_two isco88_three isco88_four #>    <chr>  <chr>      <chr>      <chr>        <chr>       #>  1 3111   3000       3100       3110         3111        #>  2 3431   3000       3400       3430         3431        #>  3 1210   1000       1200       1210         1210        #>  4 2320   2000       2300       2320         2320        #>  5 7137   7000       7100       7130         7137        #>  6 5131   5000       5100       5130         5131        #>  7 NA     NA         NA         NA           NA          #>  8 2419   2000       2400       2410         2419        #>  9 3460   3000       3400       3460         3460        #> 10 2444   2000       2400       2440         2444        #> # ℹ 56,742 more rows  # isco68 # Note that for certain four digit groups, isco68 does not have a # major group (0000, 1000). That means that Some NAs might be present, # such as for occupations that are between 1000 and 200. Remember to # check well the result. ess %>%   transmute(     isco68,     isco68_one = isco68_swap(isco68, from = 4, to = 1),     isco68_two = isco68_swap(isco68, from = 4, to = 2),     isco68_three = isco68_swap(isco68, from = 4, to = 3),     isco68_four = isco68_swap(isco68, from = 4, to = 4)   ) #> # A tibble: 56,752 × 5 #>    isco68 isco68_one isco68_two isco68_three isco68_four #>    <chr>  <chr>      <chr>      <chr>        <chr>       #>  1 0140   NA         0100       0140         0140        #>  2 3210   3000       3200       3210         3210        #>  3 2119   2000       2100       2110         2119        #>  4 1320   1000       1300       1320         1320        #>  5 8550   8000       8500       8550         8550        #>  6 5401   5000       5400       5400         5401        #>  7 NA     NA         NA         NA           NA          #>  8 1593   1000       1500       1590         1593        #>  9 1930   1000       1900       1930         1930        #> 10 1950   1000       1900       1950         1950        #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 3-digit ISCO08/ISCO88COM to ESEC — isco08_to_esec","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC — isco08_to_esec","text":"function translates vector 3-digit ISCO08/ISCO08COM codes ESEC codes using translation tables stored all_schema$isco08_to_esec / all_schema$isco88com_to_esec_three.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC — isco08_to_esec","text":"","code":"isco08_to_esec(x, is_supervisor, self_employed, n_employees, label = FALSE)  isco88com_to_esec(   x,   is_supervisor,   self_employed,   n_employees,   full_method = TRUE,   label = FALSE )"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC — isco08_to_esec","text":"x character vector 3-digit ISCO codes. 4-digit equivalent instead 131, code 1310, 4-digit version 3-digit ISCO. is_supervisor numeric vector indicating whether individual supervisor (1, e.g. responsible employees) (0). self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. label logical value indicating whether return labels translated ESEC codes (default FALSE). full_method boolean whether apply full method simple method.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC — isco08_to_esec","text":"character vector ESEC codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC — isco08_to_esec","text":"translation taken iscogen Stata package. details, check package documentation search ISCO08/ISCO88COM -> ESEC. function accept 3 digit codes 4 digits. means 3-digit code 131 1310. codes 4 digits, even though code represented 3-digits (1310, 1320, etc..) ISCO88COM two types translations: simple full method. full method uses information whether respondent supervisor, self-employed number subordinates employee. contrast, simple method matches directly ISCO code ESEC code. info, please see page 17 European Socio-economic Classification (ESeC) User Guide (2006) Rode, D. Harrison, E. translation ISCO88 done ISCO88COM ISCO88. ISCO88, can translate ISCO88COM using function DIGCLASS::isco88_to_isco88com translating ESEC. Contrary ISCO88COM-ESEC, ISCO08 simplified method translation done ISCO08 directly ESEC.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC — isco08_to_esec","text":"","code":"library(dplyr)  # convert isco08 to three digits ess$isco08_three <- isco08_swap(ess$isco08, from = 4, to = 3)  ess %>%   transmute(     isco08_three,     esec = isco08_to_esec(       isco08_three,       is_supervisor,       self_employed,       emplno,       label = FALSE     ),     esec_label = isco08_to_esec(       isco08_three,       is_supervisor,       self_employed,       emplno,       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco08_three esec  esec_label                                                 #>    <chr>        <chr> <chr>                                                      #>  1 3110         2     'Lower mgrs/professionals, higher supervisory/technicians' #>  2 4120         3     'Intermediate occupations'                                 #>  3 1120         1     'Large employers, higher mgrs/professionals'               #>  4 2330         2     'Lower mgrs/professionals, higher supervisory/technicians' #>  5 7410         6     'Lower supervisors and technicians'                        #>  6 5310         7     'Lower sales and service'                                  #>  7 NA           NA    NA                                                         #>  8 2430         1     'Large employers, higher mgrs/professionals'               #>  9 2630         1     'Large employers, higher mgrs/professionals'               #> 10 2640         2     'Lower mgrs/professionals, higher supervisory/technicians' #> # ℹ 56,742 more rows  # convert isco88 to three digits ess$isco88com_three <- isco88_swap(ess$isco88com, from = 4, to = 3)  # Using the full method ess %>%   transmute(     isco88com_three,     esec_label = isco88com_to_esec(       isco88com_three,       is_supervisor,       self_employed,       emplno,       label = TRUE,       full_method = TRUE     ),     esec_no_label = isco88com_to_esec(       isco88com_three,       is_supervisor,       self_employed,       emplno,       label = FALSE,       full_method = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com_three esec_label                                      esec_no_label #>    <chr>           <chr>                                           <chr>         #>  1 3110            'Lower mgrs/professionals, higher supervisory/… 2             #>  2 3430            'Intermediate occupations'                      3             #>  3 1210            'Large employers, higher mgrs/professionals'    1             #>  4 2320            'Lower mgrs/professionals, higher supervisory/… 2             #>  5 7130            'Lower supervisors and technicians'             6             #>  6 5130            'Lower sales and service'                       7             #>  7 NA              NA                                              NA            #>  8 2410            'Large employers, higher mgrs/professionals'    1             #>  9 3460            'Intermediate occupations'                      3             #> 10 2440            'Lower mgrs/professionals, higher supervisory/… 2             #> # ℹ 56,742 more rows  # Using the simple method ess %>%   transmute(     isco88com_three,     esec_simple = isco88com_to_esec(       isco88com_three,       label = FALSE,       full_method = FALSE     ),     esec_simple_label = isco88com_to_esec(       isco88com_three,       label = TRUE,       full_method = FALSE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com_three esec_simple esec_simple_label                                 #>    <chr>           <chr>       <chr>                                             #>  1 3110            2           'Lower mgrs/professionals, higher supervisory/te… #>  2 3430            3           'Intermediate occupations'                        #>  3 1210            1           'Large employers, higher mgrs/professionals'      #>  4 2320            2           'Lower mgrs/professionals, higher supervisory/te… #>  5 7130            8           'Lower technical'                                 #>  6 5130            7           'Lower sales and service'                         #>  7 NA              NA          NA                                                #>  8 2410            1           'Large employers, higher mgrs/professionals'      #>  9 3460            3           'Intermediate occupations'                        #> 10 2440            2           'Lower mgrs/professionals, higher supervisory/te… #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","text":"function translates vector 3-digit ISCO08/ISCO88COM codes ESEC-MP codes using translation tables stored all_schema$isco08_to_esec / all_schema$isco88com_to_esec_three. translating ESEC using tables, function reassigns managers professionals (ISCO08/ISCO88COM codes 1 2) high/low managers profesionals","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","text":"","code":"isco08_to_esec_mp(x, is_supervisor, self_employed, n_employees, label = FALSE)  isco88com_to_esec_mp(   x,   is_supervisor,   self_employed,   n_employees,   full_method = TRUE,   label = FALSE )"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","text":"x character vector 3-digit ISCO codes. 4-digit equivalent instead 131, code 1310, 4-digit version 3-digit ISCO. is_supervisor numeric vector indicating whether individual supervisor (1, e.g. responsible employees) (0). self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. label logical value indicating whether return labels translated ESEC-MP codes (default FALSE). full_method boolean whether apply full method simple method.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec_mp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","text":"character vector ESEC-MP codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec_mp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","text":"function translates vector 3-digit ISCO08/ISCO88COM codes ESEC-MP codes. ESEC-MP class schema similar ESEC reassigns managers professionals (ISCO08/ISCO88COM codes 1 2) high/low managers profesionals. Similarly DIGCLASS::isco88com_to_esec, isco88com_to_esec_mp allows translate using simple full method. isco08_to_esec_mp allow translate using two different methods uses full method default.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec_mp.html","id":"todo-after-this-is-corrected-in-the-code-correct-it-here-and-in-all-docs-","dir":"Reference","previous_headings":"","what":"TODO: After this is corrected in the code, correct it here and in all docs.","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","text":"schema slight variation original ESEC logic used build like : occupations ESEC digit 1 ISCO 1-digit 0 1 subordinates, high manager occupations ESEC digit 1 self-employed 1 employee, high manager occupations ESEC digit 1 1-digit ISCO higher 1 either employee self-employed subordinates, high professional occupations ESEC digit 2 ISCO 1-digit 0 1 subordinates, lower manager occupations ESEC digit 2 self-employed 1 employee, lower manager occupations ESEC digit 2 1-digit ISCO higher 1 either employee self-employed subordinates, lower professional translation created Stata file shared Oscar Smallenbroek called \"ESEC-MP.\". info, please contact author. function accept 3 digit codes 4 digits. means 3-digit code 131 1310. codes 4 digits, even though code represented 3-digits (1310, 1320, etc..)","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_esec_mp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 3-digit ISCO08/ISCO88COM to ESEC-MP — isco08_to_esec_mp","text":"","code":"library(dplyr)  # convert to three digits ess$isco08_three <- isco08_swap(ess$isco08, from = 4, to = 3)  ess %>%   transmute(     isco08_three,     esec = isco08_to_esec(       isco08_three,       is_supervisor,       self_employed,       emplno,       label = FALSE     ),     esec_label = isco08_to_esec(       isco08_three,       is_supervisor,       self_employed,       emplno,       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco08_three esec  esec_label                                                 #>    <chr>        <chr> <chr>                                                      #>  1 3110         2     'Lower mgrs/professionals, higher supervisory/technicians' #>  2 4120         3     'Intermediate occupations'                                 #>  3 1120         1     'Large employers, higher mgrs/professionals'               #>  4 2330         2     'Lower mgrs/professionals, higher supervisory/technicians' #>  5 7410         6     'Lower supervisors and technicians'                        #>  6 5310         7     'Lower sales and service'                                  #>  7 NA           NA    NA                                                         #>  8 2430         1     'Large employers, higher mgrs/professionals'               #>  9 2630         1     'Large employers, higher mgrs/professionals'               #> 10 2640         2     'Lower mgrs/professionals, higher supervisory/technicians' #> # ℹ 56,742 more rows  # Convert isco88com to three digits ess$isco88com_three <- isco88_swap(ess$isco88com, from = 4, to = 3)  # Using the full method ess %>%   transmute(     isco88com_three,     esec = isco88com_to_esec_mp(       isco88com_three,       is_supervisor,       self_employed,       emplno,       full_method = TRUE,       label = FALSE     ),     esec_label = isco88com_to_esec_mp(       isco88com_three,       is_supervisor,       self_employed,       emplno,       full_method = TRUE,       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com_three esec  esec_label                #>    <chr>           <chr> <chr>                     #>  1 3110            3     Lower Manager             #>  2 3430            5     Higher-grade White-collar #>  3 1210            1     Higher Manager            #>  4 2320            4     Lower Professional        #>  5 7130            8     Higher-grade Blue-collar  #>  6 5130            9     Lower-grade White-collar  #>  7 NA              NA    NA                        #>  8 2410            1     Higher Manager            #>  9 3460            5     Higher-grade White-collar #> 10 2440            4     Lower Professional        #> # ℹ 56,742 more rows  # Using the simple method. For esec_mp # we need all variables (is_supervisor, self_employed, etc..) # because we need to assign the manager/professionals depending # these variables. ess %>%   transmute(     isco88com_three,     esec_simple = isco88com_to_esec_mp(       isco88com_three,       is_supervisor,       self_employed,       emplno,       full_method = FALSE,       label = FALSE     ),     esec_simple_label = isco88com_to_esec_mp(       isco88com_three,       is_supervisor,       self_employed,       emplno,       full_method = FALSE,       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com_three esec_simple esec_simple_label         #>    <chr>           <chr>       <chr>                     #>  1 3110            3           Lower Manager             #>  2 3430            5           Higher-grade White-collar #>  3 1210            1           Higher Manager            #>  4 2320            4           Lower Professional        #>  5 7130            10          Lower-grade Blue-collar   #>  6 5130            9           Lower-grade White-collar  #>  7 NA              NA          NA                        #>  8 2410            1           Higher Manager            #>  9 3460            5           Higher-grade White-collar #> 10 2440            4           Lower Professional        #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_eseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Translates 2-digit ISCO08 to ESEG. — isco08_to_eseg","title":"Translates 2-digit ISCO08 to ESEG. — isco08_to_eseg","text":"function translates vector 2-digit ISCO88COM codes ESEG class schema.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_eseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translates 2-digit ISCO08 to ESEG. — isco08_to_eseg","text":"","code":"isco08_to_eseg(x, work_status, main_activity, age, type, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_eseg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translates 2-digit ISCO08 to ESEG. — isco08_to_eseg","text":"x character vector 2-digit ISCO codes. 4-digit equivalent instead 13, code 1300, 4-digit version 2-digit ISCO. work_status numeric vector values 0 3 1 = self_employed, 0 = employee 2 = non employed. main_activity numeric vector values 1 5 1 = respondent working, 2 = respondent education, 3 = respondent disabled , 4 = respondent paid work (household work, taking care children, etc..) 5 = respondent retired. example, see variable mainact European Social Survey. age numeric vector ages respondent. type type translation make. Possible values \"one-digit\" \"two-digit\". \"one-digit\" translation returns broad summary based translation 9 categories, whereas \"two-digit\" translation returns much bigger ESEG translation 25 categories. label logical value indicating whether return labels translated ESEG codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_eseg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translates 2-digit ISCO08 to ESEG. — isco08_to_eseg","text":"translation implemented following work Kea Tijdens document \"ESEG-2014 coding scheme + explanatory note\". details, see last table document .","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_eseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translates 2-digit ISCO08 to ESEG. — isco08_to_eseg","text":"","code":"library(dplyr)  # Convert isco08 to two digits ess$isco08_two <- isco08_swap(ess$isco08, from = 4, to = 2)  # Using the two-digit translation ess %>%   transmute(     isco08_two,     eseg = isco08_to_eseg(       isco08_two,       work_status,       main_activity,       agea,       type = \"two-digit\"     ),     eseg_label = isco08_to_eseg(       isco08_two,       work_status,       main_activity,       agea,       type = \"two-digit\",       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco08_two eseg  eseg_label                                                   #>    <chr>      <chr> <chr>                                                        #>  1 3100       3.1   31 Science, engineering and ICT technicians and associated … #>  2 4100       5.1   51 General and numerical clerks and other clerical support … #>  3 1100       1.3   13 Higher managerial employees                               #>  4 2300       2.5   25 Teaching professionals                                    #>  5 7400       6.3   63 Metal, machinery, handicraft, printing, electrical and e… #>  6 5300       5.3   53 Personal care employees                                   #>  7 NA         NA    NA                                                           #>  8 2400       2.3   23 Business and administration professionals                 #>  9 2600       2.4   24 Legal, social and cultural professionals                  #> 10 2600       2.4   24 Legal, social and cultural professionals                  #> # ℹ 56,742 more rows  # Using the one-digit translation ess %>%   transmute(     isco08_two,     eseg = isco08_to_eseg(       isco08_two,       work_status,       main_activity,       agea,       type = \"one-digit\"     ),     eseg_label = isco08_to_eseg(       isco08_two,       work_status,       main_activity,       agea,       type = \"one-digit\",       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco08_two eseg  eseg_label                                           #>    <chr>      <chr> <chr>                                                #>  1 3100       3     3 Technicians and associated professeional employees #>  2 4100       5     5 Clerks and skilled service employees               #>  3 1100       1     1 Manager                                            #>  4 2300       2     2 Professionals                                      #>  5 7400       6     6 Industrial skilled employees                       #>  6 5300       5     5 Clerks and skilled service employees               #>  7 NA         NA    NA                                                   #>  8 2400       2     2 Professionals                                      #>  9 2600       2     2 Professionals                                      #> 10 2600       2     2 Professionals                                      #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isco88.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO08/ISCO68 to ISCO88 — isco08_to_isco88","title":"Translate 4-digit ISCO08/ISCO68 to ISCO88 — isco08_to_isco88","text":"function translates vector 4-digit ISCO08/ISCO68 codes ISCO88 codes using translation tables stored all_schema$isco08_to_isco88 / all_schema$isco68_to_isco88.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isco88.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO08/ISCO68 to ISCO88 — isco08_to_isco88","text":"","code":"isco08_to_isco88(x, label = FALSE)  isco68_to_isco88(x, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isco88.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO08/ISCO68 to ISCO88 — isco08_to_isco88","text":"x character vector 4-digit ISCO codes. label logical value indicating whether return labels translated ISCO88 codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isco88.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO08/ISCO68 to ISCO88 — isco08_to_isco88","text":"character vector ISCO88 codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isco88.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO08/ISCO68 to ISCO88 — isco08_to_isco88","text":"translation taken iscogen Stata package. details, check package documentation search ISCO08/ISCO68 -> ISCO88.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isco88.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO08/ISCO68 to ISCO88 — isco08_to_isco88","text":"","code":"library(dplyr)  # isco08 ess %>% transmute(   isco08,   isco88 = isco08_to_isco88(isco08, label = FALSE),   isco88_label = isco08_to_isco88(isco08, label = TRUE) ) #> # A tibble: 56,752 × 3 #>    isco08 isco88 isco88_label                                      #>    <chr>  <chr>  <chr>                                             #>  1 3111   3111   'Chemical and physical science technicians'       #>  2 4120   4115   'Secretaries'                                     #>  3 1120   1210   'Directors and chief executives'                  #>  4 2330   2320   'Secondary education teaching professionals'      #>  5 7411   7137   'Building and related electricians'               #>  6 5311   5131   'Child-care workers'                              #>  7 NA     NA     NA                                                #>  8 2432   2419   'Business professionals not elsewhere classified' #>  9 2635   2446   'Social work professionals'                       #> 10 2643   2444   'Philologists, translators and interpreters'      #> # ℹ 56,742 more rows  # isco68 ess %>% transmute(   isco68,   isco88 = isco68_to_isco88(isco68, label = FALSE),   isco88_label = isco68_to_isco88(isco68, label = TRUE) ) #> # A tibble: 56,752 × 3 #>    isco68 isco88 isco88_label                                      #>    <chr>  <chr>  <chr>                                             #>  1 0140   3111   'Chemical and physical science technicians'       #>  2 3210   4111   'Stenographers and typists'                       #>  3 2119   1210   'Directors and chief executives'                  #>  4 1320   2321   NA                                                #>  5 8550   7137   'Building and related electricians'               #>  6 5401   5131   'Child-care workers'                              #>  7 NA     NA     NA                                                #>  8 1593   2419   'Business professionals not elsewhere classified' #>  9 1930   2446   'Social work professionals'                       #> 10 1950   2444   'Philologists, translators and interpreters'      #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isei.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO08/ISCO88/ISCO68 to ISEI — isco08_to_isei","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to ISEI — isco08_to_isei","text":"function translates vector 4-digit ISCO08/ISCO88/ISCO68 codes ISEI codes using translation tables stored all_schema$isco08_to_isei / all_schema$isco88_to_isei / all_schema$isco68_to_isei.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to ISEI — isco08_to_isei","text":"","code":"isco08_to_isei(x)  isco88_to_isei(x)  isco68_to_isei(x)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to ISEI — isco08_to_isei","text":"x character vector 4-digit ISCO codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isei.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to ISEI — isco08_to_isei","text":"character vector ISEI codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isei.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to ISEI — isco08_to_isei","text":"translation taken iscogen Stata package. details, check package documentation search ISCO08/ISCO88/ISCO88 -> ISEI. Since ISEI labels, labels availabe function.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_isei.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to ISEI — isco08_to_isei","text":"","code":"library(dplyr)  ess %>%   transmute(     isco08,     isco88,     isco68,     isei_08 = isco08_to_isei(isco08),     isei_88 = isco88_to_isei(isco88),     isei_68 = isco68_to_isei(isco68)   ) #> # A tibble: 56,752 × 6 #>    isco08 isco88 isco68 isei_08 isei_88 isei_68 #>    <chr>  <chr>  <chr>  <chr>   <chr>   <chr>   #>  1 3111   3111   0140   49      45      47      #>  2 4120   3431   3210   42      54      55      #>  3 1120   1210   2119   70      70      69      #>  4 2330   2320   1320   71      69      71      #>  5 7411   7137   8550   43      37      40      #>  6 5311   5131   5401   26      25      24      #>  7 NA     NA     NA     NA      NA      NA      #>  8 2432   2419   1593   64      69      66      #>  9 2635   3460   1930   59      43      54      #> 10 2643   2444   1950   68      65      54      #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_microclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO08 to microclass — isco08_to_microclass","title":"Translate 4-digit ISCO08 to microclass — isco08_to_microclass","text":"function translates vector 4-digit ISCO08 codes microclass codes using translation table stored all_schema$isco08_to_microclass.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_microclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO08 to microclass — isco08_to_microclass","text":"","code":"isco08_to_microclass(x, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_microclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO08 to microclass — isco08_to_microclass","text":"x character vector 4-digit ISCO codes. label logical value indicating whether return labels translated microclass codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_microclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO08 to microclass — isco08_to_microclass","text":"character vector microclass codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_microclass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO08 to microclass — isco08_to_microclass","text":"translation created Excel file shared Oscar Smallenbroek called \"isco08 micro numeric labels.xlsx\". info, please contact author.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_microclass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO08 to microclass — isco08_to_microclass","text":"","code":"library(dplyr)  ess %>% transmute(   isco08,   microclasses = isco08_to_microclass(isco08),   microclasses_label = isco08_to_microclass(isco08, label = TRUE) ) #> # A tibble: 56,752 × 3 #>    isco08 microclasses microclasses_label                                        #>    <chr>  <chr>        <chr>                                                     #>  1 3111   311          Physical and engineering science technicians              #>  2 4120   412          Secretaries (general)                                     #>  3 1120   112          Managing directors and chief executives                   #>  4 2330   233          Secondary education teachers                              #>  5 7411   740          Electrical and electronics trades workers                 #>  6 5311   531          Child care workers and teachers’ aides                    #>  7 NA     NA           NA                                                        #>  8 2432   242          Administration, Sales, marketing and public relations pr… #>  9 2635   263          Social Science Professionals                              #> 10 2643   265          Creative and performing professionals                     #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_msec.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 3-digit ISCO08/ISCO88COM to MSEC — isco08_to_msec","title":"Translate 3-digit ISCO08/ISCO88COM to MSEC — isco08_to_msec","text":"function translates vector 3-digit ISCO08/ISCO88COM codes MSEC codes using translation tables stored all_schema$isco08_to_msec / all_schema$isco88com_to_msec.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_msec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 3-digit ISCO08/ISCO88COM to MSEC — isco08_to_msec","text":"","code":"isco08_to_msec(x, is_supervisor, self_employed, n_employees, label = FALSE)  isco88com_to_msec(x, is_supervisor, self_employed, n_employees, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_msec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 3-digit ISCO08/ISCO88COM to MSEC — isco08_to_msec","text":"x character vector 3-digit ISCO codes. 4-digit equivalent instead 131, code 1310, 4-digit version 3-digit ISCO. is_supervisor numeric vector indicating whether individual supervisor (1, e.g. responsible employees) (0). self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. label logical value indicating whether return labels translated MSEC codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_msec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 3-digit ISCO08/ISCO88COM to MSEC — isco08_to_msec","text":"character vector MSEC codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_msec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 3-digit ISCO08/ISCO88COM to MSEC — isco08_to_msec","text":"translations created document \"Allocation rules ISCO-08 ISCO-88 (COM) 3-digit codes ESEG-Revised\" Oscar Smallenbroek, Florian Hertel Carlo Barone. info, please contact authors. Although originally called ESEG-Revised, class schema formally called MSEC. function accept 3 digit codes 4 digits. means 3-digit code 131 1310. codes 4 digits, even though code represented 3-digits (1310, 1320, etc..)","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_msec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 3-digit ISCO08/ISCO88COM to MSEC — isco08_to_msec","text":"","code":"library(dplyr)  # convert to three digits ess$isco08_three <- isco08_swap(ess$isco08, from = 4, to = 3) ess$isco88com_three <- isco88_swap(ess$isco88com, from = 4, to = 3)  # isco08 ess %>%   transmute(     isco08_three,     msec_label = isco08_to_msec(       isco08_three,       is_supervisor,       self_employed,       emplno,       label = TRUE     ),     msec = isco08_to_msec(       isco08_three,       is_supervisor,       self_employed,       emplno,       label = FALSE     )   ) #> # A tibble: 56,752 × 3 #>    isco08_three msec_label                                      msec  #>    <chr>        <chr>                                           <chr> #>  1 3110         Lower Management Employees                      14    #>  2 4120         General Clerks                                  51    #>  3 1120         Higher Management Employees                     13    #>  4 2330         Primary and Secondary Education Professionals   25    #>  5 7410         Skilled Labor Supervisors                       60    #>  6 5310         Personal Care Employees                         53    #>  7 NA           NA                                              NA    #>  8 2430         Higher Management Employees                     13    #>  9 2630         Professionals N.E.C. (Not Elsewhere Classified) 20    #> 10 2640         Social Professionals                            24    #> # ℹ 56,742 more rows  # isco88com ess %>%   transmute(     isco88com_three,     msec_label = isco88com_to_msec(       isco88com_three,       is_supervisor,       self_employed,       emplno,       label = TRUE     ),     msec = isco88com_to_msec(       isco88com_three,       is_supervisor,       self_employed,       emplno,       label = FALSE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com_three msec_label                                    msec  #>    <chr>           <chr>                                         <chr> #>  1 3110            Lower Management Employees                    14    #>  2 3430            General Clerks                                51    #>  3 1210            Higher Management Employees                   13    #>  4 2320            Primary and Secondary Education Professionals 25    #>  5 7130            Skilled Labor Supervisors                     60    #>  6 5130            Personal Care Employees                       53    #>  7 NA              NA                                            NA    #>  8 2410            Higher Management Employees                   13    #>  9 3460            Legal and Social Associate Professionals      34    #> 10 2440            Social Professionals                          24    #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_oesch.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO08/ISCO88 to OESCH16/OESCH8/OESCH5 — isco08_to_oesch","title":"Translate 4-digit ISCO08/ISCO88 to OESCH16/OESCH8/OESCH5 — isco08_to_oesch","text":"function translates vector 4-digit ISCO08/ISCO88 codes OESCH codes using translation tables stored all_schema$isco08_to_oesch16 / all_schema$isco88_to_oesch16 / all_schema$oesch16_to_oesch8 / all_schema$oesch16_to_oesch5.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_oesch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO08/ISCO88 to OESCH16/OESCH8/OESCH5 — isco08_to_oesch","text":"","code":"isco08_to_oesch(x, self_employed, n_employees, n_classes = 16, label = FALSE)  isco88_to_oesch(x, self_employed, n_employees, n_classes = 16, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_oesch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO08/ISCO88 to OESCH16/OESCH8/OESCH5 — isco08_to_oesch","text":"x character vector 4-digit ISCO codes. self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. n_classes numeric value indicating number OESCH classes obtain. Default 16 OESCH classes. possible values 16 classes, 8 classes 5 classes. information, see details section. label logical value indicating whether return labels translated OESCH codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_oesch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO08/ISCO88 to OESCH16/OESCH8/OESCH5 — isco08_to_oesch","text":"character vector OESCH codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_oesch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO08/ISCO88 to OESCH16/OESCH8/OESCH5 — isco08_to_oesch","text":"function works first translating OESCH16 translating OESCH variants, user requested n_classes argument. translation taken iscogen Stata package. details, check package documentation search ISCO88/IS68 -> OESCH. translations OESCH16 OESCH8/OESCH5, see source Stata package oesch . details, users can see translation used package all_schema$oesch16_to_oesch8 all_schema$oesch16_to_oesch5. Moreover, labels used can found all_labels$oesch16, all_labels$oesch8 all_labels$oesch5.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_oesch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO08/ISCO88 to OESCH16/OESCH8/OESCH5 — isco08_to_oesch","text":"","code":"library(dplyr)  # isco08 ess %>%   transmute(     isco08,     oesch16 = isco08_to_oesch(isco08, self_employed, emplno, label = FALSE),     oesch8 = isco08_to_oesch(isco08, self_employed, emplno, n_classes = 8, label = FALSE),     oesch5 = isco08_to_oesch(isco08, self_employed, emplno, n_classes = 5, label = FALSE),   ) #> # A tibble: 56,752 × 4 #>    isco08 oesch16 oesch8 oesch5 #>    <chr>  <chr>   <chr>  <chr>  #>  1 3111   6       3      2      #>  2 4120   11      6      4      #>  3 1120   9       5      1      #>  4 2330   13      7      1      #>  5 7411   7       4      4      #>  6 5311   15      8      4      #>  7 NA     NA      NA     NA     #>  8 2432   9       5      1      #>  9 2635   14      7      2      #> 10 2643   13      7      1      #> # ℹ 56,742 more rows   # isco88 ess %>%   transmute(     isco88,     oesch16 = isco88_to_oesch(isco88, self_employed, emplno, label = FALSE),     oesch8 = isco88_to_oesch(isco88, self_employed, emplno, n_classes = 8, label = FALSE),     oesch5 = isco88_to_oesch(isco88, self_employed, emplno, n_classes = 5, label = FALSE),   ) #> # A tibble: 56,752 × 4 #>    isco88 oesch16 oesch8 oesch5 #>    <chr>  <chr>   <chr>  <chr>  #>  1 3111   6       3      2      #>  2 3431   10      5      2      #>  3 1210   9       5      1      #>  4 2320   13      7      1      #>  5 7137   7       4      4      #>  6 5131   15      8      4      #>  7 NA     NA      NA     NA     #>  8 2419   9       5      1      #>  9 3460   14      7      2      #> 10 2444   14      7      2      #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_siops.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO08/ISCO88/ISCO68 to SIOPS — isco08_to_siops","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to SIOPS — isco08_to_siops","text":"function translates vector 4-digit ISCO08/ISCO88/ISCO68 codes SIOPS codes using translation tables stored all_schema$isco08_to_siops / all_schema$isco88_to_siops / all_schema$isco68_to_siops.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_siops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to SIOPS — isco08_to_siops","text":"","code":"isco08_to_siops(x)  isco88_to_siops(x)  isco68_to_siops(x)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_siops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to SIOPS — isco08_to_siops","text":"x character vector 4-digit ISCO codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_siops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to SIOPS — isco08_to_siops","text":"character vector SIOPS codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_siops.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to SIOPS — isco08_to_siops","text":"translation taken iscogen Stata package. details, check package documentation search ISCO08/ISCO88/ISCO88 -> SIOPS. Since SIOPS labels, labels availabe function.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_to_siops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO08/ISCO88/ISCO68 to SIOPS — isco08_to_siops","text":"","code":"library(dplyr)  ess %>%   transmute(     isco08,     isco88,     isco68,     siops_08 = isco08_to_siops(isco08),     siops_88 = isco88_to_siops(isco88),     siops_68 = isco68_to_siops(isco68)   ) #> # A tibble: 56,752 × 6 #>    isco08 isco88 isco68 siops_08 siops_88 siops_68 #>    <chr>  <chr>  <chr>  <chr>    <chr>    <chr>    #>  1 3111   3111   0140   46.00    46       46       #>  2 4120   3431   3210   50.87    53       48       #>  3 1120   1210   2119   64.51    70       75       #>  4 2330   2320   1320   62.63    60       60       #>  5 7411   7137   8550   44.01    44       44       #>  6 5311   5131   5401   23.00    23       23       #>  7 NA     NA     NA     NA       NA       NA       #>  8 2432   2419   1593   57.00    57       57       #>  9 2635   3460   1930   53.89    49       52       #> 10 2643   2444   1950   65.66    62       62       #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_two_to_esec.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 2-digit ISCO08 to ESEC — isco08_two_to_esec","title":"Translate 2-digit ISCO08 to ESEC — isco08_two_to_esec","text":"function translates vector 2-digit ISCO08 codes ESEC codes using translation table stored all_schema$isco08_two_to_esec.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_two_to_esec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 2-digit ISCO08 to ESEC — isco08_two_to_esec","text":"","code":"isco08_two_to_esec(x, is_supervisor, self_employed, n_employees, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_two_to_esec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 2-digit ISCO08 to ESEC — isco08_two_to_esec","text":"x character vector 2-digit ISCO codes. 4-digit equivalent instead 13, code 1300, 4-digit version 2-digit ISCO. is_supervisor numeric vector indicating whether individual supervisor (1, e.g. responsible employees) (0). self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. label logical value indicating whether return labels translated ESEC codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_two_to_esec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 2-digit ISCO08 to ESEC — isco08_two_to_esec","text":"function accept 2 digit codes 4 digits. means 2-digit code 13 1300. codes 4 digits, even though code represented 2-digits (1300, 1400, etc..) exactly DIGCLASS::isco08_to_esec two digit ISCO.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco08_two_to_esec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 2-digit ISCO08 to ESEC — isco08_two_to_esec","text":"","code":"library(dplyr)  # convert to two digits ess$isco08_two <- isco08_swap(ess$isco08, from = 4, to = 2)  ess %>%   transmute(     isco08_two,     esec = isco08_two_to_esec(       isco08_two,       is_supervisor,       self_employed,       emplno,       label = FALSE     ),     esec_label = isco08_two_to_esec(       isco08_two,       is_supervisor,       self_employed,       emplno,       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco08_two esec  esec_label                                                 #>    <chr>      <chr> <chr>                                                      #>  1 3100       2     'Lower mgrs/professionals, higher supervisory/technicians' #>  2 4100       2     'Lower mgrs/professionals, higher supervisory/technicians' #>  3 1100       1     'Large employers, higher mgrs/professionals'               #>  4 2300       2     'Lower mgrs/professionals, higher supervisory/technicians' #>  5 7400       4     'Small employers and self-employed (non-agriculture)'      #>  6 5300       6     'Lower supervisors and technicians'                        #>  7 NA         NA    NA                                                         #>  8 2400       1     'Large employers, higher mgrs/professionals'               #>  9 2600       1     'Large employers, higher mgrs/professionals'               #> 10 2600       1     'Large employers, higher mgrs/professionals'               #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO88/ISCO68 to EGP11/EGP7/EGP5/EGP3 — isco88_to_egp","title":"Translate 4-digit ISCO88/ISCO68 to EGP11/EGP7/EGP5/EGP3 — isco88_to_egp","text":"function translates vector 4-digit ISCO88/ISCO68 codes EGP11/EGP7/EGP5/EGP3 codes using translation tables stored all_schema$isco88_to_egp11 / all_schema$isco68_to_egp11 / all_schema$egp11_to_egp7 / all_schema$egp11_to_egp5 / all_schema$egp11_to_egp3.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO88/ISCO68 to EGP11/EGP7/EGP5/EGP3 — isco88_to_egp","text":"","code":"isco88_to_egp(x, self_employed, n_employees, n_classes = 11, label = FALSE)  isco68_to_egp(x, self_employed, n_employees, n_classes = 11, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO88/ISCO68 to EGP11/EGP7/EGP5/EGP3 — isco88_to_egp","text":"x character vector 4-digit ISCO codes. self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. n_classes numeric value indicating number EGP classes obtain. Default 11 EGP classes. possible values 11 classes, 7 classes, 5 classes 3 classes. information, see details section. label logical value indicating whether return labels translated EGP codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO88/ISCO68 to EGP11/EGP7/EGP5/EGP3 — isco88_to_egp","text":"character vector EGP codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO88/ISCO68 to EGP11/EGP7/EGP5/EGP3 — isco88_to_egp","text":"function works first translating EGP11 translating EGP variants, user requested n_classes argument. translation taken iscogen Stata package. details, check package documentation search ISCO88/IS68 -> EGP11. translations EGP11 EGP7/EGP5/EGP3, see source occupar R package . details, users can see translation used package all_schema$egp11_to_egp7, all_schema$egp11_to_egp5 all_schema$egp11_to_egp3. Moreover, labels used can found all_labels$egp11, all_labels$egp7, all_labels$egp5 all_labels$egp3.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO88/ISCO68 to EGP11/EGP7/EGP5/EGP3 — isco88_to_egp","text":"","code":"library(dplyr)  # isco88 ess %>% transmute(   isco88,   egp11 = isco88_to_egp(isco88, self_employed, emplno, label = FALSE),   egp7 = isco88_to_egp(isco88, self_employed, emplno, n_classes = 7, label = FALSE),   egp5 = isco88_to_egp(isco88, self_employed, emplno, n_classes = 5, label = FALSE),   egp3 = isco88_to_egp(isco88, self_employed, emplno, n_classes = 3, label = FALSE), ) #> # A tibble: 56,752 × 5 #>    isco88 egp11 egp7  egp5  egp3  #>    <chr>  <chr> <chr> <chr> <chr> #>  1 3111   2     2     1     1     #>  2 3431   2     2     1     1     #>  3 1210   1     1     1     1     #>  4 2320   2     2     1     1     #>  5 7137   8     5     4     3     #>  6 5131   4     3     1     1     #>  7 NA     NA    NA    NA    NA    #>  8 2419   2     2     1     1     #>  9 3460   3     3     1     1     #> 10 2444   2     2     1     1     #> # ℹ 56,742 more rows  # isco68 ess %>% transmute(   isco68,   egp11 = isco68_to_egp(isco68, self_employed, emplno, label = FALSE),   egp7 = isco68_to_egp(isco68, self_employed, emplno, n_classes = 7, label = FALSE),   egp5 = isco68_to_egp(isco68, self_employed, emplno, n_classes = 5, label = FALSE),   egp3 = isco68_to_egp(isco68, self_employed, emplno, n_classes = 3, label = FALSE) ) #> # A tibble: 56,752 × 5 #>    isco68 egp11 egp7  egp5  egp3  #>    <chr>  <chr> <chr> <chr> <chr> #>  1 0140   2     2     1     1     #>  2 3210   3     3     1     1     #>  3 2119   1     1     1     1     #>  4 1320   2     2     1     1     #>  5 8550   8     5     4     3     #>  6 5401   9     6     4     3     #>  7 NA     NA    NA    NA    NA    #>  8 1593   2     2     1     1     #>  9 1930   2     2     1     1     #> 10 1950   2     2     1     1     #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","title":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","text":"function translates vector 4-digit ISCO88/ISCO68 codes EGP-MP codes using translation tables stored all_schema$isco88_to_egp11 / all_schema$isco68_to_egp11. translating EGP using tables, function reassigns managers professionals (ISCO88/ISCO68 codes 1 2) high/low managers profesionals. Note function translates EGP11 (EGP7/EGP5/EGP3) reassigns categories high/low managers professionals. Note translation uses EGP11.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","text":"","code":"isco88_to_egp_mp(x, is_supervisor, self_employed, n_employees, label = FALSE)  isco68_to_egp_mp(x, is_supervisor, self_employed, n_employees, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","text":"x character vector 4-digit ISCO codes. is_supervisor numeric vector indicating whether individual supervisor (1, e.g. responsible employees) (0). self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. label logical value indicating whether return labels translated EGP-MP codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp_mp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","text":"character vector EGP-MP codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp_mp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","text":"EGP-MP class schema similar EGP reassigns managers professionals (ISCO88/ISCO68 codes 1 2) high/low managers profesionals.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp_mp.html","id":"todo-after-this-is-corrected-in-the-code-correct-it-here-and-in-all-docs-","dir":"Reference","previous_headings":"","what":"TODO: After this is corrected in the code, correct it here and in all docs.","title":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","text":"schema slight variation original EGP logic used build like : occupations EGP digit 1 ISCO 1-digit 0 1 subordinates, high manager occupations EGP digit 1 self-employed 1 employee, high manager occupations EGP digit 1 1-digit ISCO higher 1 either employee self-employed subordinates, high professional occupations EGP digit 2 ISCO 1-digit 0 1 subordinates, lower manager occupations EGP digit 2 self-employed 1 employee, lower manager occupations EGP digit 2 1-digit ISCO higher 1 either employee self-employed subordinates, lower professional translation created Stata file shared Oscar Smallenbroek called \"EGP-MP.\". info, please contact author.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_egp_mp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO88/ISCO68 to EGP-MP — isco88_to_egp_mp","text":"","code":"library(dplyr)  # isco88 ess %>%   transmute(     isco88,     egp_mp = isco88_to_egp_mp(       isco88,       is_supervisor,       self_employed,       emplno,       label = FALSE     ),     egp_mp_label = isco88_to_egp_mp(       isco88,       is_supervisor,       self_employed,       emplno,       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco88 egp_mp egp_mp_label         #>    <chr>  <chr>  <chr>                #>  1 3111   3      Higher Professionals #>  2 3431   4      Lower Professionals  #>  3 1210   1      Higher Managers      #>  4 2320   4      Lower Professionals  #>  5 7137   10     Skilled Worker       #>  6 5131   6      Lower Sales-Service  #>  7 NA     NA     NA                   #>  8 2419   3      Higher Professionals #>  9 3460   5      Routine Nonmanual    #> 10 2444   4      Lower Professionals  #> # ℹ 56,742 more rows  # isco68 ess %>%   transmute(     isco68,     egp_mp = isco68_to_egp_mp(       isco68,       is_supervisor,       self_employed,       emplno,       label = FALSE     ),     egp_mp_label = isco68_to_egp_mp(       isco68,       is_supervisor,       self_employed,       emplno,       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco68 egp_mp egp_mp_label         #>    <chr>  <chr>  <chr>                #>  1 0140   3      Higher Professionals #>  2 3210   5      Routine Nonmanual    #>  3 2119   1      Higher Managers      #>  4 1320   3      Higher Professionals #>  5 8550   10     Skilled Worker       #>  6 5401   11     Unskilled Worker     #>  7 NA     NA     NA                   #>  8 1593   3      Higher Professionals #>  9 1930   3      Higher Professionals #> 10 1950   3      Higher Professionals #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco08.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO88/ISCO68 to ISCO08 — isco88_to_isco08","title":"Translate 4-digit ISCO88/ISCO68 to ISCO08 — isco88_to_isco08","text":"function translates vector 4-digit ISCO88/ISCO68 codes ISCO08 codes using translation tables stored all_schema$isco88_to_isco08 / all_schema$isco68_to_isco08.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco08.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO88/ISCO68 to ISCO08 — isco88_to_isco08","text":"","code":"isco88_to_isco08(x, label = FALSE)  isco68_to_isco08(x, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco08.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO88/ISCO68 to ISCO08 — isco88_to_isco08","text":"x character vector 4-digit ISCO codes. label logical value indicating whether return labels translated ISCO08 codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco08.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO88/ISCO68 to ISCO08 — isco88_to_isco08","text":"character vector ISCO08 codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco08.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO88/ISCO68 to ISCO08 — isco88_to_isco08","text":"translation taken iscogen Stata package. details, check package documentation search ISCO88/ISCO68 -> ISCO08.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco08.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO88/ISCO68 to ISCO08 — isco88_to_isco08","text":"","code":"library(dplyr)  # isco88 ess %>%   transmute(     isco88,     isco08 = isco88_to_isco08(isco88, label = FALSE),     isco08_label = isco88_to_isco08(isco88, label = TRUE)   ) #> # A tibble: 56,752 × 3 #>    isco88 isco08 isco08_label                                    #>    <chr>  <chr>  <chr>                                           #>  1 3111   3111   'Chemical and physical science technicians'     #>  2 3431   3343   'Administrative and executive secretaries'      #>  3 1210   1120   'Managing directors and chief executives'       #>  4 2320   2330   'Secondary education teachers'                  #>  5 7137   7411   'Building and related electricians'             #>  6 5131   5311   'Child care workers'                            #>  7 NA     NA     NA                                              #>  8 2419   2400   'Business and administration professionals'     #>  9 3460   3412   'Social work associate professionals'           #> 10 2444   2643   'Translators, interpreters and other linguists' #> # ℹ 56,742 more rows  # isco68 ess %>%   transmute(     isco68,     isco08 = isco68_to_isco08(isco68, label = FALSE),     isco08_label = isco68_to_isco08(isco68, label = TRUE)   ) #> # A tibble: 56,752 × 3 #>    isco68 isco08 isco08_label                                    #>    <chr>  <chr>  <chr>                                           #>  1 0140   3111   'Chemical and physical science technicians'     #>  2 3210   4120   'Secretaries (general)'                         #>  3 2119   1120   'Managing directors and chief executives'       #>  4 1320   2330   'Secondary education teachers'                  #>  5 8550   7411   'Building and related electricians'             #>  6 5401   5311   'Child care workers'                            #>  7 NA     NA     NA                                              #>  8 1593   2432   'Public relations professionals'                #>  9 1930   2635   'Social work and counselling professionals'     #> 10 1950   2643   'Translators, interpreters and other linguists' #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco68.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO88 to ISCO68 — isco88_to_isco68","title":"Translate 4-digit ISCO88 to ISCO68 — isco88_to_isco68","text":"function translates vector 4-digit ISCO88 codes ISCO68 codes using translation table stored all_schema$isco88_to_isco68.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco68.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO88 to ISCO68 — isco88_to_isco68","text":"","code":"isco88_to_isco68(x, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco68.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO88 to ISCO68 — isco88_to_isco68","text":"x character vector 4-digit ISCO codes. label logical value indicating whether return labels translated ISCO68 codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco68.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO88 to ISCO68 — isco88_to_isco68","text":"character vector ISCO68 codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco68.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO88 to ISCO68 — isco88_to_isco68","text":"translation taken iscogen Stata package. details, check package documentation search ISCO88 -> ISCO68.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco68.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO88 to ISCO68 — isco88_to_isco68","text":"","code":"library(dplyr)  # isco88 ess %>%   transmute(     isco88,     isco68 = isco88_to_isco68(isco88, label = FALSE),     isco68_label = isco88_to_isco68(isco88, label = TRUE)   ) #> # A tibble: 56,752 × 3 #>    isco88 isco68 isco68_label                #>    <chr>  <chr>  <chr>                       #>  1 3111   0140   'PHYS SCIENCE TECHN'        #>  2 3431   3210   'SECRETARIES ARW'           #>  3 1210   2119   'MEMBER BOARD OF DIRECTORS' #>  4 2320   1320   'SECONDARY SCHOOL TEACHER'  #>  5 7137   8550   'ELEC WIREMEN'              #>  6 5131   5401   'NURSEMAID'                 #>  7 NA     NA     NA                          #>  8 2419   1593   'PUBLIC RELATIONS MAN'      #>  9 3460   1930   'SOCIAL WORKER ARW'         #> 10 2444   1950   'PHILOLOGISTS'              #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco88com.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO88 to ISCO88COM — isco88_to_isco88com","title":"Translate 4-digit ISCO88 to ISCO88COM — isco88_to_isco88com","text":"function translates vector 4-digit ISCO88 codes ISCO88COM codes using translation table stored all_schema$isco88_to_isco88com.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco88com.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO88 to ISCO88COM — isco88_to_isco88com","text":"","code":"isco88_to_isco88com(x, label = FALSE)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco88com.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO88 to ISCO88COM — isco88_to_isco88com","text":"x character vector 4-digit ISCO codes. label logical value indicating whether return labels translated ISCO88COM codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco88com.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO88 to ISCO88COM — isco88_to_isco88com","text":"character vector ISCO88COM codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco88com.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO88 to ISCO88COM — isco88_to_isco88com","text":"translation taken iscogen Stata package. details, check package documentation search ISCO88 -> ISCO88COM.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_isco88com.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO88 to ISCO88COM — isco88_to_isco88com","text":"","code":"library(dplyr)  ess %>%   transmute(     isco88,     isco88com = isco88_to_isco88com(isco88, label = FALSE),     isco88com_label = isco88_to_isco88com(isco88, label = TRUE)   ) #> # A tibble: 56,752 × 3 #>    isco88 isco88com isco88com_label                                              #>    <chr>  <chr>     <chr>                                                        #>  1 3111   3111      'Chemical and physical science technicians'                  #>  2 3431   3431      'Administrative secretaries and related associate professio… #>  3 1210   1210      'Directors and chief executives'                             #>  4 2320   2320      'Secondary education teaching professionals'                 #>  5 7137   7137      'Building and related electricians'                          #>  6 5131   5131      'Child-care workers'                                         #>  7 NA     NA        NA                                                           #>  8 2419   2419      'Business professionals not elsewhere classified'            #>  9 3460   3460      'Social work associate professionals'                        #> 10 2444   2444      'Philologists, translators and interpreters'                 #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_mps.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate 4-digit ISCO88 to MPS — isco88_to_mps","title":"Translate 4-digit ISCO88 to MPS — isco88_to_mps","text":"function translates vector 4-digit ISCO88 codes MPS codes using translation table stored all_schema$isco88_to_mps.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_mps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate 4-digit ISCO88 to MPS — isco88_to_mps","text":"","code":"isco88_to_mps(x)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_mps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate 4-digit ISCO88 to MPS — isco88_to_mps","text":"x character vector 4-digit ISCO codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_mps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate 4-digit ISCO88 to MPS — isco88_to_mps","text":"character vector MPS codes.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_mps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate 4-digit ISCO88 to MPS — isco88_to_mps","text":"translation taken iscogen Stata package. details, check package documentation search ISCO88 -> MPS.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88_to_mps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate 4-digit ISCO88 to MPS — isco88_to_mps","text":"","code":"library(dplyr)  ess %>%   transmute(     isco88,     mps = isco88_to_mps(isco88),   ) #> # A tibble: 56,752 × 2 #>    isco88 mps   #>    <chr>  <chr> #>  1 3111   69.3  #>  2 3431   73.2  #>  3 1210   150.8 #>  4 2320   149.2 #>  5 7137   56    #>  6 5131   56.9  #>  7 NA     NA    #>  8 2419   126.7 #>  9 3460   88.2  #> 10 2444   117.2 #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88com_to_wright.html","id":null,"dir":"Reference","previous_headings":"","what":"Translates 4-digit ISCO88COM to WRIGHT. — isco88com_to_wright","title":"Translates 4-digit ISCO88COM to WRIGHT. — isco88com_to_wright","text":"function translates vector 4-digit ISCO88COM codes E.O Wright class schema.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88com_to_wright.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translates 4-digit ISCO88COM to WRIGHT. — isco88com_to_wright","text":"","code":"isco88com_to_wright(   x,   is_supervisor,   self_employed,   n_employees,   control_work,   control_daily,   type,   label = FALSE )"},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88com_to_wright.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translates 4-digit ISCO88COM to WRIGHT. — isco88com_to_wright","text":"x character vector 4-digit ISCO codes. 4-digit equivalent instead 131, code 1310, 4-digit version 4-digit ISCO. is_supervisor numeric vector indicating whether individual supervisor (1, e.g. responsible employees) (0). self_employed numeric vector indicating whether individual self-employed (1) employee (0). n_employees numeric vector indicating number employees respondent. control_work likert-scale type question 0 10 0 whether individual control work/organisation decisions 10 complete control work/organization decisions. example, see variable iorgact European Social Survey. control_daily likert-scale type question 1 4 1 means complete control decide daily work /organised 4 means control decide daily work /organised. example, see variable orgwrk European Social Survey. Another example recoding variable wkdcorga European Social Survey 8-10 1, 5-7 2, 2-4 3 0-1 4. type type translation make. Possible values \"simple\", \"decision-making\" \"power-class\". label logical value indicating whether return labels translated WRIGHT codes (default FALSE).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88com_to_wright.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translates 4-digit ISCO88COM to WRIGHT. — isco88com_to_wright","text":"translation implemented function originally developed Erik Olin Wright. three possible types translations: \"simple\" version, \"decision-making\" version \"power-class\" version. translation implemented following SPSS script Håkon Leiulfsrud Heidi Jensberg. information, please contact authors.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/isco88com_to_wright.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translates 4-digit ISCO88COM to WRIGHT. — isco88com_to_wright","text":"","code":"library(dplyr)   # E.O Wright - Simple translation ess %>%   transmute(     isco88com,     wr_simple = isco88com_to_wright(       isco88com,       is_supervisor,       self_employed,       emplno,       control_work,       control_daily,       type = \"simple\"     ),     wr_simple_label = isco88com_to_wright(       isco88com,       is_supervisor,       self_employed,       emplno,       control_work,       control_daily,       type = \"simple\",       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com wr_simple wr_simple_label         #>    <chr>     <chr>     <chr>                   #>  1 3111      7         Skilled manager/superv  #>  2 3431      12        Low skilled workers     #>  3 1210      4         Expert managers         #>  4 2320      9         Skilled workers         #>  5 7137      7         Skilled manager/superv  #>  6 5131      12        Low skilled workers     #>  7 NA        3         Self empl w/no empoyees #>  8 2419      4         Expert managers         #>  9 3460      9         Skilled workers         #> 10 2444      6         Expert workers          #> # ℹ 56,742 more rows  # E.O Wright - Decision-making translation ess %>%   transmute(     isco88com,     wr_decision = isco88com_to_wright(       isco88com,       is_supervisor,       self_employed,       emplno,       control_work,       control_daily,       type = \"decision-making\"     ),     wr_decision_label = isco88com_to_wright(       isco88com,       is_supervisor,       self_employed,       emplno,       control_work,       control_daily,       type = \"decision-making\",       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com wr_decision wr_decision_label       #>    <chr>     <chr>       <chr>                   #>  1 3111      9           Skilled workers         #>  2 3431      12          Low skilled workers     #>  3 1210      NA          NA                      #>  4 2320      NA          NA                      #>  5 7137      8           Skilled supervisors     #>  6 5131      12          Low skilled workers     #>  7 NA        3           Self empl w/no empoyees #>  8 2419      5           Expert supervisors      #>  9 3460      NA          NA                      #> 10 2444      6           Experts                 #> # ℹ 56,742 more rows  # E.O Wright - Power-class translation ess %>%   transmute(     isco88com,     wr_power = isco88com_to_wright(       isco88com,       is_supervisor,       self_employed,       emplno,       control_work,       control_daily,       type = \"power-class\"     ),     wr_power_label = isco88com_to_wright(       isco88com,       is_supervisor,       self_employed,       emplno,       control_work,       control_daily,       type = \"power-class\",       label = TRUE     )   ) #> # A tibble: 56,752 × 3 #>    isco88com wr_power wr_power_label              #>    <chr>     <chr>    <chr>                       #>  1 3111      7        Skilled workers             #>  2 3431      6.5      Low skilled Semi autonomous #>  3 1210      NA       NA                          #>  4 2320      NA       NA                          #>  5 7137      5        Skilled supervisors         #>  6 5131      7.5      Low skilled workers         #>  7 NA        3        Self empl                   #>  8 2419      5        Skilled supervisors         #>  9 3460      NA       NA                          #> 10 2444      7        Skilled workers             #> # ℹ 56,742 more rows"},{"path":"https://cimentadaj.github.io/socialclasses/reference/issp.html","id":null,"dir":"Reference","previous_headings":"","what":"An example data frame with data from the International Social Survey Programme (ISSP). — issp","title":"An example data frame with data from the International Social Survey Programme (ISSP). — issp","text":"Just example data frame show package can used translate schemas. source can found https://issp.org/data-download/-year/.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/issp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example data frame with data from the International Social Survey Programme (ISSP). — issp","text":"Data Frame","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/issp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An example data frame with data from the International Social Survey Programme (ISSP). — issp","text":"columns data frame refer : isco08: ISCO08 class schema. Currently 4-digits. emprel: employee relationship respondent. self-employed, employee family business. nsup: Number subordinates, . wrksup: Whether respondent subordinates, words, whether respondent supervisor. proper analysis data DIGCLASS recode data set, see vignette \"Case study: Exploring Occupations Using International Social Survey Programme (ISSP)\" package website.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://cimentadaj.github.io/socialclasses/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/repair_isco.html","id":null,"dir":"Reference","previous_headings":"","what":"Repair an ISCO variable — repair_isco","title":"Repair an ISCO variable — repair_isco","text":"ISCO variables need certain properties. particular, must contain occupations single digit. means ocupations need either 4 digits, 3 digits, 2 digits 1 digit. ISCO variable 3 digits 2 digits time.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/repair_isco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repair an ISCO variable — repair_isco","text":"","code":"repair_isco(x, digits = 4)"},{"path":"https://cimentadaj.github.io/socialclasses/reference/repair_isco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repair an ISCO variable — repair_isco","text":"x ISCO variable repair digits baseline digits function expect. whether variable 4/3/2/1 digits.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/repair_isco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repair an ISCO variable — repair_isco","text":"Repaired ISCO variable","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/repair_isco.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repair an ISCO variable — repair_isco","text":"reading datasets, might happen ISCO column read numeric column occupations 0140 converted 140. function bit sanity check: Checks provided ISCO variable character vector, , warns user numeric ISCO variables may contain lost data. Checks occupations number digits warns Converts occupations digits less digits number digits appending 0 left number digits. Even working 3/2/1 digits, ISCO codes 4 digits. instead ISCO code 241, DIGCLASS expects 2410, 3-digit code.","code":""},{"path":"https://cimentadaj.github.io/socialclasses/reference/repair_isco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repair an ISCO variable — repair_isco","text":"","code":"repair_isco(c(\"1234\", \"5678\", \"9012\")) #> [1] \"1234\" \"5678\" \"9012\"  if (FALSE) { repair_isco(c(\"123\", \"5678\", \"012\")) }"}]
