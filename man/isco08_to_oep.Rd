% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isco08.R, R/isco88.R
\name{isco08_to_oep}
\alias{isco08_to_oep}
\alias{isco88_to_oep}
\title{Translate ISCO codes to OEP (Occupational Earning Potential)}
\usage{
isco08_to_oep(x, to_factor = FALSE)

isco88_to_oep(x, to_factor = FALSE)
}
\arguments{
\item{x}{A character vector of 4-digit ISCO08/ISCO88 codes}

\item{to_factor}{A logical value indicating whether to return a factor instead of a character}
}
\value{
A character vector with OEP values
}
\description{
Translates ISCO08/ISCO88 codes to OEP, a hierarchical indicator of occupations' earning potential.
OEP is a numeric scale that measures occupations' median earnings and expresses them as percentiles
of the overall earnings structure.
}
\details{
This function translates ISCO08/ISCO88 codes (at 1-, 2-, 3-, 4-digit) to OEP, a hierarchical indicator of occupations’ earning potential. OEP is a numeric scale that measures occupations’ median earnings and expresses them as percentiles of the overall earnings structure.

As it does not have any labels, the label argument is not available in this function. For more information on this scale, please refer to:
\itemize{
\item Oesch, D., Lipps, O., Shahbazian, R., Bihagen, E. and Morris, K., (2024) Occupational earning potential: A new measure of social hierarchy applied to Europe, JRC Labour, Education and Technology working paper series 2024/06, European Commission, Seville, JRC139883. https://joint-research-centre.ec.europa.eu/scientific-activities-z/employment/jrc-labour-education-and-technology-working-paper-series_en
}

This function expects 4-digit ISCO codes. For different digit levels (1-3), first convert
using \code{isco08_swap()} or \code{isco88_swap()}. For example:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# For 3-digit ISCO:
df$isco08_3d <- isco08_swap(df$isco08, from = 4, to = 3)
df$oep <- isco08_to_oep(df$isco08_3d)
}\if{html}{\out{</div>}}

UPDATE: As of 17th of June, 2025, we have fixed the following mistakes that were occuring:

(1) Military ISCO-codes were inconsistent with the ISCO-logic (because they consist in 2-digit codes at the 3-digit level and in 3-digit codes at the 4-digit level of ISCO).

(2) Higher ISCOs codes were not filled with the codes of lower ISCO-levels (say: ISCO-1 code 6 becomes ISCO-2 code 60, becomes ISCO-3 code 600, becomes ISCO-4 code 6000).

The translation now fixes both issues and works fine.
}
\examples{
library(dplyr)

## ISCO08
# Using 4-digit ISCO (default)
ess \%>\%
  transmute(
    isco08,
    oep = isco08_to_oep(isco08)
  )

# Using 3-digit ISCO
ess \%>\%
  transmute(
    isco08,
    isco08_3d = isco08_swap(isco08, from = 4, to = 3),
    oep = isco08_to_oep(isco08_3d)
  )

# Using 2-digit ISCO
ess \%>\%
  transmute(
    isco08,
    isco08_2d = isco08_swap(isco08, from = 4, to = 2),
    oep = isco08_to_oep(isco08_2d)
  )

# Using 1-digit ISCO
ess \%>\%
  transmute(
    isco08,
    isco08_1d = isco08_swap(isco08, from = 4, to = 1),
    oep = isco08_to_oep(isco08_1d)
  )

## ISCO88
# Using 4-digit ISCO (default)
ess \%>\%
  transmute(
    isco88,
    oep = isco88_to_oep(isco88)
  )

# Using 3-digit ISCO
ess \%>\%
  transmute(
    isco88,
    isco88_3d = isco88_swap(isco88, from = 4, to = 3),
    oep = isco88_to_oep(isco88_3d)
  )

# Using 2-digit ISCO
ess \%>\%
  transmute(
    isco88,
    isco88_2d = isco88_swap(isco88, from = 4, to = 2),
    oep = isco88_to_oep(isco88_2d)
  )

# Using 1-digit ISCO
ess \%>\%
  transmute(
    isco88,
    isco88_1d = isco88_swap(isco88, from = 4, to = 1),
    oep = isco88_to_oep(isco88_1d)
  )

}
